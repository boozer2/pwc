# Requried variables:
#plant_name
#plant_num
#watering_gpio
#moisture_sensor_gpio

substitutions:
  min_water_duration: "1"
  max_water_duration: "3600"
  moisture_update_interval: 30s

defaults:
  plant_name: Plant $pwc_num-$plant_num


script:
  - id: water_plant_${plant_num}
    then:
      - switch.turn_on: p${plant_num}_watering
      - wait_until:
          condition:
            switch.is_off: p${plant_num}_watering
          timeout: "${max_water_duration}s"
      - if:
          condition:
            switch.is_on: p${plant_num}_watering
          then:
            - logger.log: "PWC${pwc_num} Timeout Waiting for ${plant_name} to finish watering!"
            - switch.turn_off: p${plant_num}_watering

switch:
  - platform: gpio
    internal: True
    pin: 
      number: ${watering_gpio}
    id: p${plant_num}_relay
  - platform: template
    name: ${plant_name} Watering Enabled
    id: p${plant_num}_watering_enabled
    optimistic: True
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
  - platform: template
    name: ${plant_name} Watering
    id: p${plant_num}_watering
    icon: "mdi:water"
    # optimistic: True
    turn_on_action:
      - if:
          condition:
            switch.is_on: p${plant_num}_watering_enabled
          then:
            - switch.template.publish:
                id: p${plant_num}_watering
                state: ON
            - logger.log: "${plant_name} Watering Starting"
            - switch.turn_on: p${plant_num}_relay
            - delay: !lambda "return id(p${plant_num}_water_duration).state * 1000;"
            - switch.turn_off: p${plant_num}_relay
            - logger.log: "${plant_name} Watering Completed"
            # - switch.turn_off: p${plant_num}_watering
            - switch.template.publish:
                id: p${plant_num}_watering
                state: OFF
            - lambda: |-
                id(p${plant_num}_watering_completed_time).publish_state(ESPTime::from_epoch_utc(id(homeassistant_time).now().timestamp).strftime("%Y-%m-%dT%H:%M:%S+00:00");
          else:
            - logger.log: "${plant_name} watering requested, but is disabled. Ignoring."
            - switch.turn_off: p${plant_num}_relay
            - switch.template.publish:
                id: p${plant_num}_watering
                state: OFF
            # - switch.turn_off: p${plant_num}_watering
    turn_off_action:
      - switch.turn_off: p${plant_num}_relay
      - logger.log: "${plant_name} Watering Manually Stopped"
      - switch.template.publish:
          id: p${plant_num}_watering
          state: OFF

sensor:
  - platform: adc
    pin: ${moisture_sensor_gpio}
    name: ${plant_name} Moisture
    update_interval: ${moisture_update_interval}
  # - platform: template
  #   name: "${plant_name} Watering Completion Time"
  #   device_class: timestamp
  #   id: p${plant_num}_watering_completed_time

text_sensor:
  - platform: template
    name: "${plant_name} Watering Completion Time"
    device_class: timestamp
    id: p${plant_num}_watering_completed_time

number:
  - platform: template
    name: "${plant_name} Watering Duration"
    id: p${plant_num}_water_duration
    icon: "mdi:timer"
    entity_category: config
    unit_of_measurement: "sec"
    min_value: $min_water_duration
    max_value: $max_water_duration
    step: 1
    optimistic: True
    restore_value: True
    initial_value: 60
    